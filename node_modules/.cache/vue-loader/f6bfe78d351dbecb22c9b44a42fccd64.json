{"remainingRequest":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\src\\components\\Tinymce\\components\\editorImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\src\\components\\Tinymce\\components\\editorImage.vue","mtime":1596273305640},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import { getToken } from 'api/qiniu'\r\n\r\nexport default {\r\n  name: 'EditorSlideUpload',\r\n  props: {\r\n    color: {\r\n      type: String,\r\n      default: '#3187e7'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n      listObj: {},\r\n      fileList: [],\r\n      uploadImgData:{type:1},\r\n      tokenObj:{token:localStorage.getItem('token')}\r\n    }\r\n  },\r\n  methods: {\r\n    checkAllSuccess() {\r\n      return Object.keys(this.listObj).every(item => this.listObj[item].hasSuccess)\r\n    },\r\n    handleSubmit() {\r\n      const arr = Object.keys(this.listObj).map(v => this.listObj[v])\r\n      if (!this.checkAllSuccess()) {\r\n        this.$message('请等待所有图片上传成功 或 出现了网络问题，请刷新页面重新上传！')\r\n        return\r\n      }\r\n      this.$emit('successCBK', arr)\r\n      this.listObj = {}\r\n      this.fileList = []\r\n      this.dialogVisible = false\r\n    },\r\n    handleSuccess(response, file) {\r\n      const uid = file.uid\r\n      const objKeyArr = Object.keys(this.listObj)\r\n      for (let i = 0, len = objKeyArr.length; i < len; i++) {\r\n        if (this.listObj[objKeyArr[i]].uid === uid) {\r\n          this.listObj[objKeyArr[i]].url = response.data\r\n          this.listObj[objKeyArr[i]].hasSuccess = true\r\n          return\r\n        }\r\n      }\r\n    },\r\n    handleRemove(file) {\r\n      const uid = file.uid\r\n      const objKeyArr = Object.keys(this.listObj)\r\n      for (let i = 0, len = objKeyArr.length; i < len; i++) {\r\n        if (this.listObj[objKeyArr[i]].uid === uid) {\r\n          delete this.listObj[objKeyArr[i]]\r\n          return\r\n        }\r\n      }\r\n    },\r\n    beforeUpload(file) {\r\n      const _self = this\r\n      const _URL = window.URL || window.webkitURL\r\n      const fileName = file.uid\r\n      this.listObj[fileName] = {}\r\n      return new Promise((resolve, reject) => {\r\n        const img = new Image()\r\n        img.src = _URL.createObjectURL(file)\r\n        img.onload = function() {\r\n          _self.listObj[fileName] = { hasSuccess: false, uid: file.uid, width: this.width, height: this.height }\r\n        }\r\n        resolve(true)\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["editorImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editorImage.vue","sourceRoot":"src/components/Tinymce/components","sourcesContent":["<template>\r\n  <div class=\"upload-container\">\r\n    <el-button :style=\"{background:color,borderColor:color}\" icon=\"el-icon-upload\" size=\"mini\" type=\"primary\" @click=\" dialogVisible=true\">上传图片\r\n    </el-button>\r\n    <el-dialog :visible.sync=\"dialogVisible\" :modal=\"false\">\r\n      <el-upload\r\n        :multiple=\"true\"\r\n        :file-list=\"fileList\"\r\n        :headers=\"tokenObj\"\r\n        :data=\"uploadImgData\"\r\n        :show-file-list=\"true\"\r\n        :on-remove=\"handleRemove\"\r\n        :on-success=\"handleSuccess\"\r\n        :before-upload=\"beforeUpload\"\r\n        class=\"editor-slide-upload\"\r\n        action=\"https://mrzx.api.zhuanfa222.com/admin/upload/uploadImgByType\"\r\n        list-type=\"picture-card\">\r\n        <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n      </el-upload>\r\n      <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"handleSubmit\">确 定</el-button>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { getToken } from 'api/qiniu'\r\n\r\nexport default {\r\n  name: 'EditorSlideUpload',\r\n  props: {\r\n    color: {\r\n      type: String,\r\n      default: '#3187e7'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n      listObj: {},\r\n      fileList: [],\r\n      uploadImgData:{type:1},\r\n      tokenObj:{token:localStorage.getItem('token')}\r\n    }\r\n  },\r\n  methods: {\r\n    checkAllSuccess() {\r\n      return Object.keys(this.listObj).every(item => this.listObj[item].hasSuccess)\r\n    },\r\n    handleSubmit() {\r\n      const arr = Object.keys(this.listObj).map(v => this.listObj[v])\r\n      if (!this.checkAllSuccess()) {\r\n        this.$message('请等待所有图片上传成功 或 出现了网络问题，请刷新页面重新上传！')\r\n        return\r\n      }\r\n      this.$emit('successCBK', arr)\r\n      this.listObj = {}\r\n      this.fileList = []\r\n      this.dialogVisible = false\r\n    },\r\n    handleSuccess(response, file) {\r\n      const uid = file.uid\r\n      const objKeyArr = Object.keys(this.listObj)\r\n      for (let i = 0, len = objKeyArr.length; i < len; i++) {\r\n        if (this.listObj[objKeyArr[i]].uid === uid) {\r\n          this.listObj[objKeyArr[i]].url = response.data\r\n          this.listObj[objKeyArr[i]].hasSuccess = true\r\n          return\r\n        }\r\n      }\r\n    },\r\n    handleRemove(file) {\r\n      const uid = file.uid\r\n      const objKeyArr = Object.keys(this.listObj)\r\n      for (let i = 0, len = objKeyArr.length; i < len; i++) {\r\n        if (this.listObj[objKeyArr[i]].uid === uid) {\r\n          delete this.listObj[objKeyArr[i]]\r\n          return\r\n        }\r\n      }\r\n    },\r\n    beforeUpload(file) {\r\n      const _self = this\r\n      const _URL = window.URL || window.webkitURL\r\n      const fileName = file.uid\r\n      this.listObj[fileName] = {}\r\n      return new Promise((resolve, reject) => {\r\n        const img = new Image()\r\n        img.src = _URL.createObjectURL(file)\r\n        img.onload = function() {\r\n          _self.listObj[fileName] = { hasSuccess: false, uid: file.uid, width: this.width, height: this.height }\r\n        }\r\n        resolve(true)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style   scoped>\r\n.editor-slide-upload {\r\n  margin-bottom: 20px;\r\n  /* /deep/ .el-upload--picture-card {\r\n    width: 100%;\r\n  } */\r\n}\r\n</style>\r\n"]}]}