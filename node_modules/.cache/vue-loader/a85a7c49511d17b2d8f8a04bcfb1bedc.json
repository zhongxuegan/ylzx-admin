{"remainingRequest":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\src\\main\\advertising\\add\\activity_center_add.vue?vue&type=template&id=a08d37de&scoped=true&","dependencies":[{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\src\\main\\advertising\\add\\activity_center_add.vue","mtime":1596273311355},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      { staticClass: \"crumbs\" },\n      [\n        _c(\n          \"el-breadcrumb\",\n          { attrs: { separator: \"/\" } },\n          [\n            _c(\"el-breadcrumb-item\", [\n              _c(\"i\", { staticClass: \"el-icon-lx-cascades\" }),\n              _vm._v(\"\\n\\t\\t\\t\\t活动中心\\n\\t\\t\\t\")\n            ]),\n            _c(\"el-breadcrumb-item\", [_vm._v(\"新增活动\")])\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      { staticClass: \"container\" },\n      [\n        _c(\n          \"el-form\",\n          {\n            ref: \"dataForm\",\n            staticClass: \"form--wrap\",\n            attrs: {\n              model: _vm.dataForm,\n              \"label-width\": _vm.formLabelWidth,\n              rules: _vm.rules\n            }\n          },\n          [\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"标题\", prop: \"title\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { autocomplete: \"off\" },\n                  model: {\n                    value: _vm.dataForm.title,\n                    callback: function($$v) {\n                      _vm.$set(_vm.dataForm, \"title\", $$v)\n                    },\n                    expression: \"dataForm.title\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"活动封面图\", prop: \"coverPicture\" } },\n              [\n                _c(\"div\", { staticClass: \"flex--wrap\" }, [\n                  _c(\n                    \"div\",\n                    [\n                      _c(\n                        \"el-upload\",\n                        {\n                          ref: \"upload\",\n                          attrs: {\n                            action: _vm.uploadAction,\n                            \"list-type\": \"picture-card\",\n                            headers: _vm.tokenObj,\n                            data: _vm.uploadImgData,\n                            \"show-file-list\": false,\n                            \"before-upload\": _vm.onBeforeUploadImage,\n                            \"on-success\": function(res, file) {\n                              return _vm.fileChange(res)\n                            }\n                          }\n                        },\n                        [\n                          _vm.dataForm.coverPicture\n                            ? _c(\"img\", {\n                                staticClass: \"avatar\",\n                                attrs: { src: _vm.dataForm.coverPicture }\n                              })\n                            : _c(\"i\", {\n                                staticClass: \"el-icon-plus avatar-uploader-icon\"\n                              })\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\"div\", { staticClass: \"tip\" }, [\n                    _vm._v(\"规格750*100，大小不超过2M\")\n                  ])\n                ])\n              ]\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"活动状态\", prop: \"status\" } },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    staticClass: \"handle-select mr10\",\n                    attrs: { placeholder: \"活动状态\" },\n                    model: {\n                      value: _vm.dataForm.status,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dataForm, \"status\", $$v)\n                      },\n                      expression: \"dataForm.status\"\n                    }\n                  },\n                  _vm._l(_vm.statusArr, function(op) {\n                    return _c(\"el-option\", {\n                      key: op.value,\n                      attrs: { label: op.name, value: op.value }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"是否为模板\", prop: \"isTemplateActivity\" } },\n              [\n                _c(\"el-switch\", {\n                  attrs: {\n                    \"active-color\": \"#13ce66\",\n                    \"inactive-color\": \"#ccc\",\n                    \"active-value\": \"1\",\n                    \"inactive-value\": \"0\"\n                  },\n                  model: {\n                    value: _vm.dataForm.isTemplateActivity,\n                    callback: function($$v) {\n                      _vm.$set(_vm.dataForm, \"isTemplateActivity\", $$v)\n                    },\n                    expression: \"dataForm.isTemplateActivity\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"活动链接\", prop: \"activityUrl\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { autocomplete: \"off\" },\n                  model: {\n                    value: _vm.dataForm.activityUrl,\n                    callback: function($$v) {\n                      _vm.$set(_vm.dataForm, \"activityUrl\", $$v)\n                    },\n                    expression: \"dataForm.activityUrl\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"期数\", prop: \"periodsNum\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { autocomplete: \"off\" },\n                  model: {\n                    value: _vm.dataForm.periodsNum,\n                    callback: function($$v) {\n                      _vm.$set(_vm.dataForm, \"periodsNum\", $$v)\n                    },\n                    expression: \"dataForm.periodsNum\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { prop: \"startTime\", label: \"活动开始时间\" } },\n              [\n                _c(\"el-date-picker\", {\n                  attrs: {\n                    type: \"date\",\n                    \"value-format\": \"yyyy-MM-dd\",\n                    placeholder: \"选择开始日期\"\n                  },\n                  on: { change: _vm.startCountDateChange },\n                  model: {\n                    value: _vm.dataForm.startTime,\n                    callback: function($$v) {\n                      _vm.$set(_vm.dataForm, \"startTime\", $$v)\n                    },\n                    expression: \"dataForm.startTime\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { prop: \"endTime\", label: \"活动结束时间\" } },\n              [\n                _c(\"el-date-picker\", {\n                  attrs: {\n                    type: \"date\",\n                    \"value-format\": \"yyyy-MM-dd\",\n                    placeholder: \"选择结束日期\"\n                  },\n                  on: { change: _vm.endCountDateChange },\n                  model: {\n                    value: _vm.dataForm.endTime,\n                    callback: function($$v) {\n                      _vm.$set(_vm.dataForm, \"endTime\", $$v)\n                    },\n                    expression: \"dataForm.endTime\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\"el-form-item\", { attrs: { label: \"规则\" } }, [\n              _c(\n                \"div\",\n                { staticClass: \"edit_container\" },\n                [\n                  _c(\"tinymce\", {\n                    ref: \"content\",\n                    attrs: { height: 300, childHasChange: _vm.hasC },\n                    model: {\n                      value: _vm.dataForm.rule,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dataForm, \"rule\", $$v)\n                      },\n                      expression: \"dataForm.rule\"\n                    }\n                  })\n                ],\n                1\n              )\n            ]),\n            _c(\n              \"el-form-item\",\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    on: {\n                      click: function($event) {\n                        _vm.reset(\"dataForm\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"取 消\")]\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { type: \"primary\" },\n                    on: {\n                      click: function($event) {\n                        _vm.submitForm(\"dataForm\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"确 定\")]\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}