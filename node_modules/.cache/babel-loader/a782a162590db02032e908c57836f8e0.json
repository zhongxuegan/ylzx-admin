{"remainingRequest":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\src\\main\\news\\h5_manager.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\src\\main\\news\\h5_manager.vue","mtime":1597905176805},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\u949F\\u5B66\\u521A\\\\Desktop\\\\jfzx-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"h5manager\",\n  data: function data() {\n    return {\n      info: {},\n      loading: false\n    };\n  },\n  methods: {\n    getData: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, _ref$data, data, code;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$axios.post(this.BASE_URL + \"admin/article/h5/path-info\");\n\n              case 2:\n                _ref = _context.sent;\n                _ref$data = _ref.data;\n                data = _ref$data.data;\n                code = _ref$data.code;\n\n                if (+code === 200) {\n                  this.info = data;\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }(),\n    changeH5path: function changeH5path() {\n      var _this = this;\n\n      this.$confirm(\"确认要修改路径\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this.apiChangePath();\n      }).catch(function () {});\n    },\n    upateH5Content: function upateH5Content() {\n      var _this2 = this;\n\n      this.$confirm(\"确认要更新H5内容\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this2.apiUpdataContent();\n      }).catch(function () {});\n    },\n    clearOldPath: function clearOldPath() {\n      var _this3 = this;\n\n      this.$confirm(\"确认要清空旧路径\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this3.apiClearOldPath();\n      }).catch(function () {});\n    },\n    apiChangePath: function () {\n      var _apiChangePath = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var temploading, _ref2, code;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                temploading = this.$loading({\n                  lock: true,\n                  text: \"loading\",\n                  spinner: \"el-icon-loading\",\n                  background: \"rgba(0,0,0,0.7)\"\n                });\n                _context2.next = 3;\n                return this.$axios.post(this.BASE_URL + \"admin/article/h5/change-catalog\");\n\n              case 3:\n                _ref2 = _context2.sent;\n                code = _ref2.data.code;\n\n                if (+code === 200) {\n                  this.getData();\n                  temploading.close();\n                  this.$message({\n                    type: \"success\",\n                    message: \"修改路径成功\"\n                  });\n                } else {\n                  temploading.close();\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function apiChangePath() {\n        return _apiChangePath.apply(this, arguments);\n      }\n\n      return apiChangePath;\n    }(),\n    apiUpdataContent: function () {\n      var _apiUpdataContent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var temploading, _ref3, code;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                temploading = this.$loading({\n                  lock: true,\n                  text: \"loading\",\n                  spinner: \"el-icon-loading\",\n                  background: \"rgba(0,0,0,0.7)\"\n                });\n                _context3.next = 3;\n                return this.$axios.post(this.BASE_URL + \"admin/article/h5/update\");\n\n              case 3:\n                _ref3 = _context3.sent;\n                code = _ref3.data.code;\n\n                if (+code === 200) {\n                  this.getData();\n                  temploading.close();\n                  this.$message({\n                    type: \"success\",\n                    message: \"更新内容成功\"\n                  });\n                } else {\n                  temploading.close();\n                }\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function apiUpdataContent() {\n        return _apiUpdataContent.apply(this, arguments);\n      }\n\n      return apiUpdataContent;\n    }(),\n    apiClearOldPath: function () {\n      var _apiClearOldPath = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var temploading, _ref4, code;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                temploading = this.$loading({\n                  lock: true,\n                  text: \"loading\",\n                  spinner: \"el-icon-loading\",\n                  background: \"rgba(0,0,0,0.7)\"\n                });\n                _context4.next = 3;\n                return this.$axios.post(this.BASE_URL + \"admin/article/h5/clear-old\");\n\n              case 3:\n                _ref4 = _context4.sent;\n                code = _ref4.data.code;\n\n                if (+code === 200) {\n                  this.getData();\n                  temploading.close();\n                  this.$message({\n                    type: \"success\",\n                    message: \"清空旧路径成功\"\n                  });\n                } else {\n                  temploading.close();\n                }\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function apiClearOldPath() {\n        return _apiClearOldPath.apply(this, arguments);\n      }\n\n      return apiClearOldPath;\n    }()\n  },\n  created: function created() {\n    this.getData();\n  }\n};",{"version":3,"sources":["h5_manager.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"table\">\r\n    <div class=\"crumbs\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item><i class=\"el-icon-lx-cascades\"></i>h5分类管理</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <div class=\"container\">\r\n      <div class=\"handle-box\">\r\n        <el-button type=\"primary\" icon=\"search\" @click=\"changeH5path\">更换h5路径</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-add\" @click=\"upateH5Content\">更新h5内容</el-button>\r\n        <el-button type=\"primary\" @click=\"clearOldPath\">清空旧路径</el-button>\r\n      </div>\r\n      <div class=\"page--content\">\r\n        <div class=\"flex\">\r\n          <div class=\"flex--label\">文章h5源内容路径:</div>\r\n          <div class=\"flex--title\">{{info.newsPathBase}}</div>\r\n        </div>\r\n        <div class=\"flex\">\r\n          <div class=\"flex--label\">生成h5路径的数量:</div>\r\n          <div class=\"flex--title\">{{info.newsPathNum}}</div>\r\n        </div>\r\n        <el-row :gutter=\"12\">\r\n          <el-col :span=\"12\">\r\n            <el-card class=\"box-card\">\r\n              <div slot=\"header\" class=\"clearfix\">\r\n                <span>h5当前路径列表</span>\r\n              </div>\r\n              <div v-for=\"o in info.newsPathCur\" :key=\"o\" class=\"text item\">\r\n                {{'路径名称 ' + o }}\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-card class=\"box-card\">\r\n              <div slot=\"header\" class=\"clearfix\">\r\n                <span>待上架的h5路径列表</span>\r\n              </div>\r\n              <div v-for=\"o in info.newsPathNew\" :key=\"o\" class=\"text item\">\r\n                {{'路径名称 ' + o }}\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"12\" style=\"margin-top:10px;\">\r\n          <el-col :span=\"12\">\r\n            <el-card class=\"box-card\">\r\n              <div slot=\"header\" class=\"clearfix\">\r\n                <span>待清空的h5路径列表</span>\r\n              </div>\r\n              <div v-for=\"o in info.newsPathWaitClear\" :key=\"o\" class=\"text item\">\r\n                {{'路径名称 ' + o }}\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-card class=\"box-card\">\r\n              <div slot=\"header\" class=\"clearfix\">\r\n                <span>待更新的h5路径列表</span>\r\n              </div>\r\n              <div v-for=\"o in info.newsPathWaitUpdate\" :key=\"o\" class=\"text item\">\r\n                {{'路径名称 ' + o }}\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n        </el-row>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"h5manager\",\r\n  data() {\r\n    return {\r\n      info: {},\r\n      loading: false\r\n    };\r\n  },\r\n  methods: {\r\n    async getData() {\r\n      let {\r\n        data: { data, code }\r\n      } = await this.$axios.post(this.BASE_URL + \"admin/article/h5/path-info\");\r\n      if (+code === 200) {\r\n        this.info = data;\r\n      }\r\n    },\r\n    changeH5path() {\r\n      this.$confirm(\"确认要修改路径\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.apiChangePath();\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    upateH5Content() {\r\n      this.$confirm(\"确认要更新H5内容\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.apiUpdataContent();\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    clearOldPath() {\r\n      this.$confirm(\"确认要清空旧路径\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.apiClearOldPath();\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    async apiChangePath() {\r\n      const temploading = this.$loading({\r\n        lock: true,\r\n        text: \"loading\",\r\n        spinner: \"el-icon-loading\",\r\n        background: \"rgba(0,0,0,0.7)\"\r\n      });\r\n      let {\r\n        data: { code }\r\n      } = await this.$axios.post(\r\n        this.BASE_URL + \"admin/article/h5/change-catalog\"\r\n      );\r\n      if (+code === 200) {\r\n        this.getData();\r\n        temploading.close();\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"修改路径成功\"\r\n        });\r\n      } else {\r\n        temploading.close();\r\n      }\r\n    },\r\n    async apiUpdataContent() {\r\n      const temploading = this.$loading({\r\n        lock: true,\r\n        text: \"loading\",\r\n        spinner: \"el-icon-loading\",\r\n        background: \"rgba(0,0,0,0.7)\"\r\n      });\r\n      let {\r\n        data: { code }\r\n      } = await this.$axios.post(this.BASE_URL + \"admin/article/h5/update\");\r\n      if (+code === 200) {\r\n        this.getData();\r\n        temploading.close();\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"更新内容成功\"\r\n        });\r\n      } else {\r\n        temploading.close();\r\n      }\r\n    },\r\n    async apiClearOldPath() {\r\n      const temploading = this.$loading({\r\n        lock: true,\r\n        text: \"loading\",\r\n        spinner: \"el-icon-loading\",\r\n        background: \"rgba(0,0,0,0.7)\"\r\n      });\r\n      let {\r\n        data: { code }\r\n      } = await this.$axios.post(this.BASE_URL + \"admin/article/h5/clear-old\");\r\n      if (+code === 200) {\r\n        this.getData();\r\n        temploading.close();\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"清空旧路径成功\"\r\n        });\r\n      } else {\r\n        temploading.close();\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getData();\r\n  }\r\n};\r\n</script>\r\n<style  scoped>\r\n.flex {\r\n  display: flex;\r\n  margin: 10px 0;\r\n}\r\n.content {\r\n  margin-top: 20px;\r\n  width: 100%;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n.flex--label {\r\n  width: 160px;\r\n  color: #999;\r\n}\r\n.flex--title {\r\n  flex: 1;\r\n}\r\n</style>"],"sourceRoot":"src/main/news"}]}