{"remainingRequest":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\src\\vendor\\Export2Excel.js","dependencies":[{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\src\\vendor\\Export2Excel.js","mtime":1596251862992},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"C:\\\\Users\\\\\\u949F\\u5B66\\u521A\\\\Desktop\\\\jfzx-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.typed.uint8-array\";\n\n/* eslint-disable */\nimport { saveAs } from 'file-saver';\nimport XLSX from 'xlsx';\n\nfunction generateArray(table) {\n  var out = [];\n  var rows = table.querySelectorAll('tr');\n  var ranges = [];\n\n  for (var R = 0; R < rows.length; ++R) {\n    var outRow = [];\n    var row = rows[R];\n    var columns = row.querySelectorAll('td');\n\n    for (var C = 0; C < columns.length; ++C) {\n      var cell = columns[C];\n      var colspan = cell.getAttribute('colspan');\n      var rowspan = cell.getAttribute('rowspan');\n      var cellValue = cell.innerText;\n      if (cellValue !== '' && cellValue == +cellValue) cellValue = +cellValue; //Skip ranges\n\n      ranges.forEach(function (range) {\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) {\n            outRow.push(null);\n          }\n        }\n      }); //Handle Row Span\n\n      if (rowspan || colspan) {\n        rowspan = rowspan || 1;\n        colspan = colspan || 1;\n        ranges.push({\n          s: {\n            r: R,\n            c: outRow.length\n          },\n          e: {\n            r: R + rowspan - 1,\n            c: outRow.length + colspan - 1\n          }\n        });\n      } //Handle Value\n\n\n      outRow.push(cellValue !== '' ? cellValue : null); //Handle Colspan\n\n      if (colspan) for (var k = 0; k < colspan - 1; ++k) {\n        outRow.push(null);\n      }\n    }\n\n    out.push(outRow);\n  }\n\n  return [out, ranges];\n}\n\nfunction datenum(v, date1904) {\n  if (date1904) v += 1462;\n  var epoch = Date.parse(v);\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n}\n\nfunction sheet_from_array_of_arrays(data, opts) {\n  var ws = {};\n  var range = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n\n  for (var R = 0; R != data.length; ++R) {\n    for (var C = 0; C != data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      var cell = {\n        v: data[R][C]\n      };\n      if (cell.v == null) continue;\n      var cell_ref = XLSX.utils.encode_cell({\n        c: C,\n        r: R\n      });\n      if (typeof cell.v === 'number') cell.t = 'n';else if (typeof cell.v === 'boolean') cell.t = 'b';else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.z = XLSX.SSF._table[14];\n        cell.v = datenum(cell.v);\n      } else cell.t = 's';\n      ws[cell_ref] = cell;\n    }\n  }\n\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\n  return ws;\n}\n\nfunction Workbook() {\n  if (!(this instanceof Workbook)) return new Workbook();\n  this.SheetNames = [];\n  this.Sheets = {};\n}\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n\n  for (var i = 0; i != s.length; ++i) {\n    view[i] = s.charCodeAt(i) & 0xff;\n  }\n\n  return buf;\n}\n\nexport function export_table_to_excel(id) {\n  var theTable = document.getElementById(id);\n  var oo = generateArray(theTable);\n  var ranges = oo[1];\n  /* original data */\n\n  var data = oo[0];\n  var ws_name = 'SheetJS';\n  var wb = new Workbook(),\n      ws = sheet_from_array_of_arrays(data);\n  /* add ranges to worksheet */\n  // ws['!cols'] = ['apple', 'banan'];\n\n  ws['!merges'] = ranges;\n  /* add worksheet to workbook */\n\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n  var wbout = XLSX.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  });\n  saveAs(new Blob([s2ab(wbout)], {\n    type: 'application/octet-stream'\n  }), 'test.xlsx');\n}\nexport function export_json_to_excel() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$multiHeader = _ref.multiHeader,\n      multiHeader = _ref$multiHeader === void 0 ? [] : _ref$multiHeader,\n      header = _ref.header,\n      data = _ref.data,\n      filename = _ref.filename,\n      _ref$merges = _ref.merges,\n      merges = _ref$merges === void 0 ? [] : _ref$merges,\n      _ref$autoWidth = _ref.autoWidth,\n      autoWidth = _ref$autoWidth === void 0 ? true : _ref$autoWidth,\n      _ref$bookType = _ref.bookType,\n      bookType = _ref$bookType === void 0 ? 'xlsx' : _ref$bookType;\n\n  /* original data */\n  filename = filename || 'excel-list';\n  data = _toConsumableArray(data);\n  data.unshift(header);\n\n  for (var i = multiHeader.length - 1; i > -1; i--) {\n    data.unshift(multiHeader[i]);\n  }\n\n  var ws_name = 'SheetJS';\n  var wb = new Workbook(),\n      ws = sheet_from_array_of_arrays(data);\n\n  if (merges.length > 0) {\n    if (!ws['!merges']) ws['!merges'] = [];\n    merges.forEach(function (item) {\n      ws['!merges'].push(XLSX.utils.decode_range(item));\n    });\n  }\n\n  if (autoWidth) {\n    /*设置worksheet每列的最大宽度*/\n    var colWidth = data.map(function (row) {\n      return row.map(function (val) {\n        /*先判断是否为null/undefined*/\n        if (val == null) {\n          return {\n            wch: 10\n          };\n        } else if (val.toString().charCodeAt(0) > 255) {\n          /*再判断是否为中文*/\n          return {\n            wch: val.toString().length * 2\n          };\n        } else {\n          return {\n            wch: val.toString().length\n          };\n        }\n      });\n    });\n    /*以第一行为初始值*/\n\n    var result = colWidth[0];\n\n    for (var _i = 1; _i < colWidth.length; _i++) {\n      for (var j = 0; j < colWidth[_i].length; j++) {\n        if (result[j]['wch'] < colWidth[_i][j]['wch']) {\n          result[j]['wch'] = colWidth[_i][j]['wch'];\n        }\n      }\n    }\n\n    ws['!cols'] = result;\n  }\n  /* add worksheet to workbook */\n\n\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n  var wbout = XLSX.write(wb, {\n    bookType: bookType,\n    bookSST: false,\n    type: 'binary'\n  });\n  saveAs(new Blob([s2ab(wbout)], {\n    type: 'application/octet-stream'\n  }), \"\".concat(filename, \".\").concat(bookType));\n}",{"version":3,"sources":["C:\\Users\\钟学刚\\Desktop\\jfzx-admin\\src\\vendor\\Export2Excel.js"],"names":["saveAs","XLSX","generateArray","table","out","rows","querySelectorAll","ranges","R","length","outRow","row","columns","C","cell","colspan","getAttribute","rowspan","cellValue","innerText","forEach","range","s","r","e","c","i","push","k","datenum","v","date1904","epoch","Date","parse","UTC","sheet_from_array_of_arrays","data","opts","ws","cell_ref","utils","encode_cell","t","z","SSF","_table","encode_range","Workbook","SheetNames","Sheets","s2ab","buf","ArrayBuffer","view","Uint8Array","charCodeAt","export_table_to_excel","id","theTable","document","getElementById","oo","ws_name","wb","wbout","write","bookType","bookSST","type","Blob","export_json_to_excel","multiHeader","header","filename","merges","autoWidth","unshift","item","decode_range","colWidth","map","val","wch","toString","result","j"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport { saveAs } from 'file-saver'\r\nimport XLSX from 'xlsx'\r\n\r\nfunction generateArray(table) {\r\n\tvar out = []\r\n\tvar rows = table.querySelectorAll('tr')\r\n\tvar ranges = []\r\n\tfor (var R = 0; R < rows.length; ++R) {\r\n\t\tvar outRow = []\r\n\t\tvar row = rows[R]\r\n\t\tvar columns = row.querySelectorAll('td')\r\n\t\tfor (var C = 0; C < columns.length; ++C) {\r\n\t\t\tvar cell = columns[C]\r\n\t\t\tvar colspan = cell.getAttribute('colspan')\r\n\t\t\tvar rowspan = cell.getAttribute('rowspan')\r\n\t\t\tvar cellValue = cell.innerText\r\n\t\t\tif (cellValue !== '' && cellValue == +cellValue) cellValue = +cellValue\r\n\r\n\t\t\t//Skip ranges\r\n\t\t\tranges.forEach(function(range) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tR >= range.s.r &&\r\n\t\t\t\t\tR <= range.e.r &&\r\n\t\t\t\t\toutRow.length >= range.s.c &&\r\n\t\t\t\t\toutRow.length <= range.e.c\r\n\t\t\t\t) {\r\n\t\t\t\t\tfor (var i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\t//Handle Row Span\r\n\t\t\tif (rowspan || colspan) {\r\n\t\t\t\trowspan = rowspan || 1\r\n\t\t\t\tcolspan = colspan || 1\r\n\t\t\t\tranges.push({\r\n\t\t\t\t\ts: {\r\n\t\t\t\t\t\tr: R,\r\n\t\t\t\t\t\tc: outRow.length,\r\n\t\t\t\t\t},\r\n\t\t\t\t\te: {\r\n\t\t\t\t\t\tr: R + rowspan - 1,\r\n\t\t\t\t\t\tc: outRow.length + colspan - 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t//Handle Value\r\n\t\t\toutRow.push(cellValue !== '' ? cellValue : null)\r\n\r\n\t\t\t//Handle Colspan\r\n\t\t\tif (colspan)\r\n\t\t\t\tfor (var k = 0; k < colspan - 1; ++k) outRow.push(null)\r\n\t\t}\r\n\t\tout.push(outRow)\r\n\t}\r\n\treturn [out, ranges]\r\n}\r\n\r\nfunction datenum(v, date1904) {\r\n\tif (date1904) v += 1462\r\n\tvar epoch = Date.parse(v)\r\n\treturn (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000)\r\n}\r\n\r\nfunction sheet_from_array_of_arrays(data, opts) {\r\n\tvar ws = {}\r\n\tvar range = {\r\n\t\ts: {\r\n\t\t\tc: 10000000,\r\n\t\t\tr: 10000000,\r\n\t\t},\r\n\t\te: {\r\n\t\t\tc: 0,\r\n\t\t\tr: 0,\r\n\t\t},\r\n\t}\r\n\tfor (var R = 0; R != data.length; ++R) {\r\n\t\tfor (var C = 0; C != data[R].length; ++C) {\r\n\t\t\tif (range.s.r > R) range.s.r = R\r\n\t\t\tif (range.s.c > C) range.s.c = C\r\n\t\t\tif (range.e.r < R) range.e.r = R\r\n\t\t\tif (range.e.c < C) range.e.c = C\r\n\t\t\tvar cell = {\r\n\t\t\t\tv: data[R][C],\r\n\t\t\t}\r\n\t\t\tif (cell.v == null) continue\r\n\t\t\tvar cell_ref = XLSX.utils.encode_cell({\r\n\t\t\t\tc: C,\r\n\t\t\t\tr: R,\r\n\t\t\t})\r\n\r\n\t\t\tif (typeof cell.v === 'number') cell.t = 'n'\r\n\t\t\telse if (typeof cell.v === 'boolean') cell.t = 'b'\r\n\t\t\telse if (cell.v instanceof Date) {\r\n\t\t\t\tcell.t = 'n'\r\n\t\t\t\tcell.z = XLSX.SSF._table[14]\r\n\t\t\t\tcell.v = datenum(cell.v)\r\n\t\t\t} else cell.t = 's'\r\n\r\n\t\t\tws[cell_ref] = cell\r\n\t\t}\r\n\t}\r\n\tif (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range)\r\n\treturn ws\r\n}\r\n\r\nfunction Workbook() {\r\n\tif (!(this instanceof Workbook)) return new Workbook()\r\n\tthis.SheetNames = []\r\n\tthis.Sheets = {}\r\n}\r\n\r\nfunction s2ab(s) {\r\n\tvar buf = new ArrayBuffer(s.length)\r\n\tvar view = new Uint8Array(buf)\r\n\tfor (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xff\r\n\treturn buf\r\n}\r\n\r\nexport function export_table_to_excel(id) {\r\n\tvar theTable = document.getElementById(id)\r\n\tvar oo = generateArray(theTable)\r\n\tvar ranges = oo[1]\r\n\r\n\t/* original data */\r\n\tvar data = oo[0]\r\n\tvar ws_name = 'SheetJS'\r\n\r\n\tvar wb = new Workbook(),\r\n\t\tws = sheet_from_array_of_arrays(data)\r\n\r\n\t/* add ranges to worksheet */\r\n\t// ws['!cols'] = ['apple', 'banan'];\r\n\tws['!merges'] = ranges\r\n\r\n\t/* add worksheet to workbook */\r\n\twb.SheetNames.push(ws_name)\r\n\twb.Sheets[ws_name] = ws\r\n\r\n\tvar wbout = XLSX.write(wb, {\r\n\t\tbookType: 'xlsx',\r\n\t\tbookSST: false,\r\n\t\ttype: 'binary',\r\n\t})\r\n\r\n\tsaveAs(\r\n\t\tnew Blob([s2ab(wbout)], {\r\n\t\t\ttype: 'application/octet-stream',\r\n\t\t}),\r\n\t\t'test.xlsx'\r\n\t)\r\n}\r\n\r\nexport function export_json_to_excel({\r\n\tmultiHeader = [],\r\n\theader,\r\n\tdata,\r\n\tfilename,\r\n\tmerges = [],\r\n\tautoWidth = true,\r\n\tbookType = 'xlsx',\r\n} = {}) {\r\n\t/* original data */\r\n\tfilename = filename || 'excel-list'\r\n\tdata = [...data]\r\n\tdata.unshift(header)\r\n\r\n\tfor (let i = multiHeader.length - 1; i > -1; i--) {\r\n\t\tdata.unshift(multiHeader[i])\r\n\t}\r\n\r\n\tvar ws_name = 'SheetJS'\r\n\tvar wb = new Workbook(),\r\n\t\tws = sheet_from_array_of_arrays(data)\r\n\r\n\tif (merges.length > 0) {\r\n\t\tif (!ws['!merges']) ws['!merges'] = []\r\n\t\tmerges.forEach((item) => {\r\n\t\t\tws['!merges'].push(XLSX.utils.decode_range(item))\r\n\t\t})\r\n\t}\r\n\r\n\tif (autoWidth) {\r\n\t\t/*设置worksheet每列的最大宽度*/\r\n\t\tconst colWidth = data.map((row) =>\r\n\t\t\trow.map((val) => {\r\n\t\t\t\t/*先判断是否为null/undefined*/\r\n\t\t\t\tif (val == null) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\twch: 10,\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (val.toString().charCodeAt(0) > 255) {\r\n\t\t\t\t\t/*再判断是否为中文*/\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\twch: val.toString().length * 2,\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\twch: val.toString().length,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t)\r\n\t\t/*以第一行为初始值*/\r\n\t\tlet result = colWidth[0]\r\n\t\tfor (let i = 1; i < colWidth.length; i++) {\r\n\t\t\tfor (let j = 0; j < colWidth[i].length; j++) {\r\n\t\t\t\tif (result[j]['wch'] < colWidth[i][j]['wch']) {\r\n\t\t\t\t\tresult[j]['wch'] = colWidth[i][j]['wch']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tws['!cols'] = result\r\n\t}\r\n\r\n\t/* add worksheet to workbook */\r\n\twb.SheetNames.push(ws_name)\r\n\twb.Sheets[ws_name] = ws\r\n\r\n\tvar wbout = XLSX.write(wb, {\r\n\t\tbookType: bookType,\r\n\t\tbookSST: false,\r\n\t\ttype: 'binary',\r\n\t})\r\n\tsaveAs(\r\n\t\tnew Blob([s2ab(wbout)], {\r\n\t\t\ttype: 'application/octet-stream',\r\n\t\t}),\r\n\t\t`${filename}.${bookType}`\r\n\t)\r\n}\n"]}]}